name: Pull request checks

on:
  push:
    branches:
      - main
      - develop

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:

  quality-check: # Check that the codebase does not contain linting errors
    name: Quality check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.16
      - name: Install dependencies and check pylint format
        run: |
          python -m pip install --upgrade pip
          mkdir -p docs/lint_results
          pylint neural_de/ --output-format=json > docs/lint_results/pylint_report.json || true
          pylint neural_de/ --output-format=text > docs/lint_results/pylint_report.txt || true

      - name: Run flake8 and export report
        run: |
          flake8 neural_de/ --output-file=docs/lint_results/flake8_report.txt || true  

      - name: Check Pylint score
        run: |
          SCORE=$(pylint src/ --output-format=json | jq '.[].score')
          if (( $(echo "$SCORE < 8" | bc -l) )); then exit 1; fi
    
  python-tests: # Install dependencies and run tests with pytest
    name: Python tests
    needs:
      [quality-check]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9",]

    if: contains(github.ref, "develop")
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_python39.txt
          pip install .
          pip install pytest
      - name: Test with pytest
        run: |
          pytest tests/

#  docker-build-check: # Build the docker image and check that it can run
#    name: Docker build check
#    needs:
#      [black-format-check, prettier-check, cspell-check, version-upgrade-check]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Build the Docker image
#        run: |
#          docker build -t neuralde .
#      - name: Run the Docker image
#        run: |
#          docker run --rm neuralde python main.py
